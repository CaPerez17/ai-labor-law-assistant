# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# LegalAssista specific - Development & Debugging files
*.bak
*_test.py
test_*.py
*_debug.py
*_fix.py
fix_*.py
debug_*.py
temp_*.py
example_*.py
verify_*.py
load_*.py
create_users*.py
direct_seed.py
startup.py
run.py
list_users.py
auth_debug.py
add_test_endpoint.py
fixed_main.py

# LegalAssista specific - Deployment & Setup scripts
setup_*.sh
verify_*.sh
fix_*.sh
diagnose_*.sh
*_fix.sh
connect_*.sh
initialize_*.sh
secure_*.sh
backend_*.sh
start_*.sh
iniciar_*.sh
test_*.sh

# LegalAssista specific - Documentation of resolved issues
*solucion*.md
*documentacion*.md
INFORME_*.md
RESUMEN_*.md
*_INSTRUCTIONS.md
SERVER_SETUP_*.md

# LegalAssista specific - Temporary SQL files
update_password*.sql
temp_*.sql
test_*.sql

# LegalAssista specific - Development databases
*.db
sql_app.db
app.db
backend.db
test.db
legalassista.db

# LegalAssista specific - Temporary JSON files
usage_stats.json
api_response.json

# LegalAssista specific - Cache and uploads
cache/
uploads/
data/casos/
data/metricas/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# PyPI configuration file
.pypirc
__pycache__/
.env
data/*.db

# SQLite database files
*.db
*.sqlite
*.sqlite3

# Archivos temporales específicos del proyecto
backend/test.db
backend/simple_app.py
backend/simplified_main.py
backend/start.py
backend/test_app.py

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg
.pytest_cache/

# Entornos virtuales
venv/
env/
ENV/

# Archivos de entorno y secretos
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
*.env.example
*credentials.json
*secrets.json
*.pem
*.key
*.p12
*.pfx

# Scripts con credenciales
*_secrets.sh
*_password.sh
*_credentials.sh
*_creds.sh
*_connection.sh
connect_to_*.sh

# Archivos de base de datos
*.db
*.sqlite
*.sqlite3

# Archivos de caché
backend/cache/
cache/

# Archivos de estadísticas y respuestas
usage_stats.json
api_response.json

# Logs
*.log
logs/

# Archivos del sistema operativo
.DS_Store
Thumbs.db

# Archivos temporales
*.swp
*~
.vscode/
.idea/

# Archivos de documentación generados
docs/_build/

# Archivos de entorno
.env
.env.*
!.env.example

# Archivos de base de datos
*.db
*.sqlite3

# Archivos de Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# Archivos de IDE
.idea/
.vscode/
*.swp
*.swo
.DS_Store

# Logs
*.log
logs/
log/

# Archivos temporales
tmp/
temp/
uploads/

# Archivos de prueba
.coverage
htmlcov/
.pytest_cache/
.tox/
nosetests.xml
coverage.xml
*.cover
.hypothesis/

# Archivos de Docker
.docker/
docker-compose.override.yml

# Archivos de Node
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Archivos de build
dist/
build/
out/
.next/

# Archivos de caché
.cache/
.parcel-cache/
.npm
.eslintcache
